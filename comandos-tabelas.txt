CREATE TABLE Autor(
	id uuid not null,
	nome varchar(100) not null,
	data_nascimento date,
	nacionalidade varchar(50),
	data_cadastro timestamp not null,
	data_atualizacao timestamp not null,
	id_usuario uuid,

	CONSTRAINT pk_Autor PRIMARY KEY(id)
);

SELECT * FROM autor;

CREATE TABLE Livro(
	id uuid not null,
	isbn varchar(20) not null,
	titulo varchar(150) not null,
	data_publicacao date,
	genero varchar(30) not null,
	preco numeric(5,2) not null,
	data_cadastro timestamp,
    data_atualizacao timestamp,
    id_usuario uuid,
	id_autor uuid not null,

	CONSTRAINT pk_Livro PRIMARY KEY(id),
	CONSTRAINT un_Livro_isbn UNIQUE(isbn),
	CONSTRAINT fk_Livro_Id_Autor FOREIGN KEY (id_autor) REFERENCES Autor(id),
	CONSTRAINT ck_Livro_Genero CHECK(genero IN('FICCAO','FANTASIA','MISTERIO','ROMANCE','BIOGRAFIA','CIENCIA')),
	CONSTRAINT ck_Livro_Preco CHECK(preco > 0)
);

SELECT * FROM livro;

CREATE TABLE Usuario(
    id uuid not null,
    login varchar(20) not null,
    senha varchar(300) not null,
    email varchar(150) not null,
    roles varchar[],

    CONSTRAINT pk_Usuario PRIMARY KEY(id)
);

SELECT * FROM usuario;

CREATE TABLE client(
	id uuid not null,
	client_id varchar(150) not null,
	client_secret varchar(400) not null,
	redirect_uri varchar(200) not null,
	scope varchar(50),                 //scope é uma permissão para um serviço acessar ou não alguma parte da API.

    CONSTRAINT pk_Client PRIMARY KEY(id)
);

SELECT * FROM client;